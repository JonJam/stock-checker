# Based off: https://github.com/actions/starter-workflows/blob/main/ci/go.yml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Setup Go Environment
      uses: actions/setup-go@v2
      with:
        go-version: '^1.15.5'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Go dependencies
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Build
      run: go build -v ./...

    - name: Test
      run: |
        mkdir test-output
        go test -v $(go list ./... | grep -v mocks) -coverprofile=test-output/coverage-report.out
        go test -v $(go list ./... | grep -v mocks) -json > test-output/test-report.out

    - name: Upload test reports
      uses: actions/upload-artifact@v2
      with:
        name: test-output
        path: test-output

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run linter
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33

  sonar:
    needs: build
    name: Sonar
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      
      - name: Download test reports
        uses: actions/download-artifact@v2
        with:
          name: test-output
          path: test-output

      - name: Run SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    name: Docker
    runs-on: ubuntu-latest

    steps:
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: jonjam/stock-checker
          tag-sha: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          target: prod-runner
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache